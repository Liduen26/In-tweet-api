# Simple workflow for deploying static content to GitHub Pages
name: "CI-CD In'tweet API"

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "test"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: secret
          MYSQL_DATABASE: intweet
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=5s --health-timeout=2s --health-retries=3


    steps: 
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v4
        
      - name: ðŸ”§ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: ðŸ“¦ Build avec Maven
        run: mvn clean install -DskipTests

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! healthcheck.sh --connect --innodb_initialized -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done   

      - name: ðŸ§ª ExÃ©cuter les tests de l'application
        run: mvn test
